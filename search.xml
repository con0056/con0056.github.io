<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《卡拉马佐夫兄弟》</title>
      <link href="/2024/07/02/%E3%80%8A%E5%8D%A1%E6%8B%89%E9%A9%AC%E4%BD%90%E5%A4%AB%E5%85%84%E5%BC%9F%E3%80%8B/"/>
      <url>/2024/07/02/%E3%80%8A%E5%8D%A1%E6%8B%89%E9%A9%AC%E4%BD%90%E5%A4%AB%E5%85%84%E5%BC%9F%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="0-资料整理"><a href="#0-资料整理" class="headerlink" title="0 资料整理"></a>0 资料整理</h2><ul><li>译本对比：<a href="https://leay.net/2022/09/01/%D0%91%D1%80%D0%B0%CC%81%D1%82%D1%8C%D1%8F-%D0%9A%D0%B0%D1%80%D0%B0%D0%BC%D0%B0%CC%81%D0%B7%D0%BE%D0%B2%D1%8B/">《卡拉马佐夫兄弟》译本对比 | 养恐龙 (leay.net)</a></li><li>他人分享：<a href="https://www.bilibili.com/video/BV11D4y1M7En/?spm_id_from=333.337.search-card.all.click&vd_source=d5ec20e6f37d183f2aa69ff3e79c3e80">法律管不到我的时候，我是怎么劝我善良的？陀思妥耶夫斯基巅峰作品《卡拉马佐夫》_哔哩哔哩_bilibili</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 3 兴趣/阅读 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Intro for《旋元佑系列》</title>
      <link href="/2024/07/02/Intro-for-%E6%97%8B%E5%85%83%E4%BD%91%E7%B3%BB%E5%88%97/"/>
      <url>/2024/07/02/Intro-for-%E6%97%8B%E5%85%83%E4%BD%91%E7%B3%BB%E5%88%97/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>十二月中，由于疫情，学校延缓了期末；一月初，我报名了托福考试。</p><p>我深知自控力的缺乏，遂在报名前后就上过去关注的公众号找学伴，意外找到了合适的人选。但备考的过程还是不尽人意，听力只做了不到5套TPO，我就彻底放弃，转向了阅读。整个假期写作的练习次数一只手数的过来，在去考场的车上，我还在从头开始背一个写作题型的模板，因为之前摆到连题目都没有完整看过，更别说练习。</p><p>而由于好运和同考试比较匹配的事实，在这样的“备考”后，我还是出分了。后来有许多人问我是如何备考的，我都有些语塞，怕说实话后被当作炫耀，只能勉强说“我运气好”和“阅读还是认真准备了”。</p><p>—— 写于2023年9月17日</p></blockquote><p>在读到《旋元佑》之前，我已经结束了TOEFL和GRE考试，备考的净时长也都是一个月（撇去我途中生病 &amp; 作息颠倒完全没有学习的时间）。</p><p>即便还算“漂亮”地完成了语言和标化考试，我不会也不愿意说自己擅长英语，只会说自己在应考上还算过得去，同时运气不错。而我本身对英语是一窍不通，只是单词量凑合，在听力上有一点gifted。对怎样提升自己的阅读、写作和口语能力则完全没有头绪，我不认为这样是会英语。</p><p>机缘巧合之下遇见了《旋元佑系列》，能说彻底地颠覆了我对英语教学的认知，也首次引发了我对于学习英语的热情。从今年2月14日读到5月初，我勉勉强强在文石上过了一遍《旋元佑文法》的电子版。结束任务时还有些沾沾自喜——竟然做到了些需要持续的事情嘛。结果试着用“学到”的文法知识去分析文章里的长句时，才发现都忘光了，面对着电子版也难以回顾。同时更是心痛自己在第一遍阅读时疏于练习，学得浑浑噩噩，耽误了初学时的黄金时间。</p><p>最后不算经过怎样的犹豫，忍痛用三伯块钱提取了《旋系列》前三部的物理版本。</p><p>For the first time in forever，<strong>终于要开始学英语了。</strong></p><img src="IMG_0207.JPG" alt="IMG_0207" style="zoom:15%;" /><h2 id="旋元佑系列"><a href="#旋元佑系列" class="headerlink" title="旋元佑系列"></a>旋元佑系列</h2><p>三本书共通的部分为书前的总序和书末的广读学英文，在此不整理。</p><h3 id="《旋元佑英文字彙》"><a href="#《旋元佑英文字彙》" class="headerlink" title="《旋元佑英文字彙》"></a>《旋元佑英文字彙》</h3><p>“彙”是“汇”的繁体版本，感谢汉字简化。</p><h4 id="1-前言"><a href="#1-前言" class="headerlink" title="1 前言"></a>1 前言</h4><p><strong>通用学术字汇</strong></p><ul><li>考试</li><li>英语文献阅读</li></ul><p>主要在说书内结构是什么，具体的指导不多。</p><h4 id="2-如何有效学单字"><a href="#2-如何有效学单字" class="headerlink" title="2 如何有效学单字"></a>2 如何有效学单字</h4><p><strong>记什么？</strong></p><ul><li>说到最后就是托福单词</li><li>或者说通用学术字汇</li></ul><p><strong>怎么记？</strong></p><ul><li>字源分析<ul><li>字首字根字尾</li><li>联想记忆：已知 → 未知</li><li>字义演变</li></ul></li><li>广读</li></ul><p><strong>字源分析详解：同化作用</strong></p><p>字首、根、尾之间相互影响，会影响最终的拼法</p><ul><li>连续子音<ol><li>子音变成相同</li><li>中间插入母音作为连音</li><li>保留其中一个</li></ol></li><li>连续母音<ol><li>中间插入母音作为连音</li><li>保留其中一个</li></ol></li><li>类似拼法<ul><li>有声无声</li><li>v&#x2F;f</li><li>b&#x2F;p</li><li>u&#x2F;v</li></ul></li></ul><h4 id="3-本书字汇学习使用说明"><a href="#3-本书字汇学习使用说明" class="headerlink" title="3 本书字汇学习使用说明"></a>3 本书字汇学习使用说明</h4><p>必读，但内容不需要整理在blog上，在此略过。</p><h4 id="4-如何学习？"><a href="#4-如何学习？" class="headerlink" title="4 如何学习？"></a>4 如何学习？</h4><p>简单看了看，感觉通读并不是在当下聪明的做法。可能可以当作字典书来学习，在背单词遇到一直记背不下来的就来翻书，同时暂停GRE单词的记忆（太花时间 &amp; 之后考虑入手旋转门为GRE写的一本书）。</p><h3 id="《旋元佑文法》"><a href="#《旋元佑文法》" class="headerlink" title="《旋元佑文法》"></a>《旋元佑文法》</h3><h3 id="《旋元佑文法解题》"><a href="#《旋元佑文法解题》" class="headerlink" title="《旋元佑文法解题》"></a>《旋元佑文法解题》</h3>]]></content>
      
      
      <categories>
          
          <category> 2 英语 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>CS/工具：Git</title>
      <link href="/2024/07/02/CS-%E5%B7%A5%E5%85%B7%EF%BC%9AGit/"/>
      <url>/2024/07/02/CS-%E5%B7%A5%E5%85%B7%EF%BC%9AGit/</url>
      
        <content type="html"><![CDATA[<h2 id="0-资源整理"><a href="#0-资源整理" class="headerlink" title="0 资源整理"></a>0 资源整理</h2><ul><li><p>CSdiy：<a href="https://csdiy.wiki/%E5%BF%85%E5%AD%A6%E5%B7%A5%E5%85%B7/Git/">Git - CS自学指南 (csdiy.wiki)</a></p><ul><li>Git tutorial：<a href="https://missing.csail.mit.edu/2020/version-control/">Version Control (Git) · Missing Semester (mit.edu)</a><ul><li>zh：<a href="https://missing-semester-cn.github.io/2020/version-control/">版本控制(Git) · the missing semester of your cs education (missing-semester-cn.github.io)</a></li></ul></li><li>尚硅谷Git教程：<a href="https://www.bilibili.com/video/BV1vy4y1s7k6/?vd_source=d5ec20e6f37d183f2aa69ff3e79c3e80">尚硅谷Git入门到精通全套教程（涵盖GitHub\Gitee码云\GitLab）_哔哩哔哩_bilibili</a></li><li>Pro Git ch1-5：<a href="https://git-scm.com/book/en/v2">Git - Book (git-scm.com)</a><a href="https://git-scm.com/book/en/v2">Git - Book (git-scm.com)</a><ul><li>zh：<a href="https://git-scm.com/book/zh/v2">Git - Book (git-scm.com)</a></li></ul></li><li>How to Write a Git Commit Message:<a href="https://cbea.ms/git-commit/">How to Write a Git Commit Message (cbea.ms)</a></li></ul></li><li><p>GitHub：<a href="https://docs.github.com/en/get-started/start-your-journey/git-and-github-learning-resources">Git and GitHub learning resources - GitHub Docs</a></p></li></ul><p>之前学过一遍Missing Semester，被打败了（悲），虽然它在CSdiy的难度星级只有二，但是我看不出它的结构，这次也谨慎选择它作为我的核心学习资料。</p><p>下一步是继续做一些网络资料的搜索，然后找到学习的Syllabus。</p><h2 id="1-Syllabus"><a href="#1-Syllabus" class="headerlink" title="1 Syllabus"></a>1 Syllabus</h2><p>暂时选择 <a href="https://git-scm.com/book/zh/v2">Git - Book (git-scm.com)</a> 作为入门材料。每次读电子书的时候内心都有点抗拒，希望这次可以顺利读完。</p><h3 id="1-起步"><a href="#1-起步" class="headerlink" title="1 起步"></a>1 起步</h3><p>开头的几个问题：</p><ol><li>什么是版本控制</li><li>如何在系统上运行Git</li><li>如何设置Git以开始工作</li></ol><ul><li>何为分布式版本控制系统</li><li>Git简史（又是膜Linus的时间，希望有一天我能懂得这些创造的魅力）</li></ul><h4 id="1-3-Git是什么？"><a href="#1-3-Git是什么？" class="headerlink" title="1-3 Git是什么？"></a>1-3 Git是什么？</h4><ul><li><p>存储项目随时间改变的快照</p></li><li><p>本地执行</p></li><li><p>保持完整性：以校验和作为索引</p></li><li><p>一般只添加数据</p></li><li><p>Git的三种状态</p></li></ul><p><img src="/2024/07/02/CS-%E5%B7%A5%E5%85%B7%EF%BC%9AGit/image-20240703092825116.png" alt="image-20240703092825116"></p><h4 id="1-6-初次运行Git前的配置"><a href="#1-6-初次运行Git前的配置" class="headerlink" title="1-6 初次运行Git前的配置"></a>1-6 初次运行Git前的配置</h4><p><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%88%9D%E6%AC%A1%E8%BF%90%E8%A1%8C-Git-%E5%89%8D%E7%9A%84%E9%85%8D%E7%BD%AE">Git - 初次运行 Git 前的配置 (git-scm.com)</a></p><ul><li><p>配置变量存储在三个层次：每个级别会覆盖上一层级别的配置</p><ul><li>系统上每个用户</li><li>当前用户：使用 <code>--global</code> 选项</li><li>当前仓库</li></ul></li><li><p>设置用户信息</p><ul><li>当你想针对特定项目使用不同的用户名称与邮件地址时，可以在那个项目目录下运行没有 <code>--global</code> 选项的命令来配置</li></ul></li><li><p>命令：<code>git config</code>｜注意这里的 <code>config</code> 是一个 <code>&lt;verb&gt;</code></p><ul><li>查看配置信息<ul><li>所有：<code>--list</code></li><li>某一配置：<code>&lt;key&gt;</code></li><li>可选：<code>--show-origin</code>，展示来源文件</li></ul></li><li>在不同级别设置配置变量<ul><li><code>--system</code></li><li><code>--global</code></li><li><code>--local</code></li></ul></li></ul></li></ul><h4 id="1-7-获取帮助"><a href="#1-7-获取帮助" class="headerlink" title="1-7 获取帮助"></a>1-7 获取帮助</h4><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token operator">&lt;</span>verb<span class="token operator">></span> <span class="token parameter variable">--help</span> <span class="token comment"># 综合手册（manpage）</span><span class="token function">git</span> <span class="token operator">&lt;</span>verb<span class="token operator">></span> <span class="token parameter variable">-h</span> <span class="token comment"># 简明版</span></code></pre><h3 id="2-Git基础"><a href="#2-Git基础" class="headerlink" title="2 Git基础"></a>2 Git基础</h3><h4 id="2-1-获取Git仓库"><a href="#2-1-获取Git仓库" class="headerlink" title="2-1 获取Git仓库"></a>2-1 获取Git仓库</h4><h4 id="2-2"><a href="#2-2" class="headerlink" title="2-2"></a>2-2</h4>]]></content>
      
      
      <categories>
          
          <category> 1-3 CS/工具 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Head First Java</title>
      <link href="/2024/07/02/HFJ/"/>
      <url>/2024/07/02/HFJ/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Java初探"><a href="#一、Java初探" class="headerlink" title="一、Java初探"></a>一、Java初探</h2><p>用时：1h5m</p><h3 id="0-Syllabus"><a href="#0-Syllabus" class="headerlink" title="0 Syllabus"></a>0 Syllabus</h3><table><thead><tr><th>Topic</th><th>Section</th><th>Notes</th></tr></thead><tbody><tr><td></td><td>01 Java的工作方式</td><td></td></tr><tr><td></td><td>02 Java的使用方式</td><td></td></tr><tr><td></td><td>03 Java简史</td><td></td></tr><tr><td></td><td>04 Java代码结构</td><td></td></tr><tr><td></td><td>05 写一个带main()方法的类</td><td></td></tr><tr><td></td><td>06 简单的布尔测试</td><td></td></tr><tr><td></td><td>07 条件分支</td><td></td></tr><tr><td></td><td>08 编写一个正式的商业应用 Phrase-O-Matic</td><td></td></tr><tr><td></td><td>09 练习及答案</td><td></td></tr></tbody></table><h3 id="01-Java的工作方式-02-Java的使用方式"><a href="#01-Java的工作方式-02-Java的使用方式" class="headerlink" title="01 Java的工作方式 &amp; 02 Java的使用方式"></a>01 Java的工作方式 &amp; 02 Java的使用方式</h3><p>源代码（ .java文件）→ 编译器（javac） → 输出（字节码 .class文件） → 虚拟机（JVM）运行字节码文件</p><h3 id="03-Java简史"><a href="#03-Java简史" class="headerlink" title="03 Java简史"></a>03 Java简史</h3><ul><li>JVM运行时可以优化代码</li><li>使用大量内存</li></ul><h3 id="04-Java代码结构"><a href="#04-Java代码结构" class="headerlink" title="04 Java代码结构"></a>04 Java代码结构</h3><p>源文件 → 类 → 方法 → 语句</p><ul><li><p>每个应用至少有一个类</p></li><li><p>每个应用至少有一个main方法❓但我不知道应用是什么……可以直接运行的源码吗</p></li></ul><h3 id="05-写一个带main-方法的类"><a href="#05-写一个带main-方法的类" class="headerlink" title="05 写一个带main()方法的类"></a>05 写一个带main()方法的类</h3><p>一个Java程序中只能有一个类包含一个main方法</p><h3 id="06-简单的布尔测试"><a href="#06-简单的布尔测试" class="headerlink" title="06 简单的布尔测试"></a>06 简单的布尔测试</h3><p>Java中布尔类型和整数类型不兼容，不能对一个整数进行测试</p><pre class="language-java" data-language="java"><code class="language-java"><span class="token keyword">boolean</span> isHot <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token comment">// false</span></code></pre><h3 id="07-条件分支"><a href="#07-条件分支" class="headerlink" title="07 条件分支"></a>07 条件分支</h3><h3 id="08-编写一个正式的商业应用-Phrase-O-Matic"><a href="#08-编写一个正式的商业应用-Phrase-O-Matic" class="headerlink" title="08 编写一个正式的商业应用 Phrase-O-Matic"></a>08 编写一个正式的商业应用 Phrase-O-Matic</h3><p>暂时没看（太困了）</p><h3 id="09-练习及答案"><a href="#09-练习及答案" class="headerlink" title="09 练习及答案"></a>09 练习及答案</h3><p>感觉有点太简单，暂时没做。</p><p>做完之后发现错错错，填字游戏也好难-.-，不想做了。</p><h2 id="二、对象城之旅"><a href="#二、对象城之旅" class="headerlink" title="二、对象城之旅"></a>二、对象城之旅</h2><p>用时：53m</p><p>除了练习都完成了。读到这里觉得HFJ的结构不是很明确（我不喜欢），但对重点内容的突出和解释做得很到位（感觉还行）。</p><p>这一章就简单介绍了OO的一些概念和在Java中的实现，暂时都算比较熟悉的东西，没有太值得记录的。与我所学过的一点C++和Python的区别在对全局变量的实现上，Java中所有变量都应该定义在类内，“全局”通过public和static关键字实现，暂时不了解细节。</p><h2 id="三、基本类型和引用"><a href="#三、基本类型和引用" class="headerlink" title="三、基本类型和引用"></a>三、基本类型和引用</h2><p>用时：1h</p><p>学到这里的时候感觉有一丝奇怪，虽然现在的学习状态很让我自己满意，但它可能是不够的。该如何提效呢？</p><p>喜欢p56的对象访谈，绷。</p><ul><li><p>变量</p><ul><li>基本类型（8种 p51）<ul><li>boolean</li><li>char</li><li>整数<ul><li>byte</li><li>short</li><li>int</li><li>long</li></ul></li><li>浮点数<ul><li>float</li><li>double</li></ul></li></ul></li><li>引用<ul><li>类<ul><li>字符串用类来实现</li></ul></li><li>接口</li><li>数组<ul><li>包含基本类型的数组</li></ul></li><li>枚举</li></ul></li></ul></li><li><p>当一个对象未被任何变量引用 &#x2F; 不可达时，可以被清除</p></li></ul><h2 id="四、方法使用实例变量"><a href="#四、方法使用实例变量" class="headerlink" title="四、方法使用实例变量"></a>四、方法使用实例变量</h2><p>用时：1h</p><p>猜测讲到封装了。开头引言表达的核心思想是：状态和行为相互影响（也就是实例对象和方法）。</p><ul><li><p>方法（参数传递的方法：按值传递）</p><ul><li>实参</li><li>形参：获得实参的一个副本</li></ul></li><li><p>返回值</p><ul><li>需与声明的返回类型兼容</li></ul></li><li><p>隐式宽化：小东西放到大杯子</p></li><li><p>隐式转换包括宽化</p></li><li><p>封装：一个类的方法必须有：获取方法、设置方法、方法</p><ul><li>实例变量 private</li><li>方法 public<ul><li>Getter</li><li>Setter</li></ul></li></ul></li><li><p>实例变量和局部变量</p><ul><li>实例变量<ul><li>类中声明，每个类型有默认值，无需初始化</li><li>默认值<ul><li>基本类型：数值 &amp; char 是 0；boolean 是 false</li><li>引用类型：null</li></ul></li></ul></li><li>局部变量<ul><li>方法中声明，必须初始化</li><li>形参是特殊的实例变量</li></ul></li></ul></li><li><p>比较变量</p><ul><li><p>相等：.equals方法</p><ul><li>对象之间的相等取决于对这个对象类型，最重要的是什么</li></ul></li><li><p>相同：&#x3D;&#x3D;</p></li><li><p><em>python中</em></p><ul><li>相等：&#x3D;&#x3D;</li><li>相同：is operator</li></ul></li></ul></li></ul><h2 id="五、写程序"><a href="#五、写程序" class="headerlink" title="五、写程序"></a>五、写程序</h2><p>05和06似乎开始写小型的应用了，不知道阅读过程是否可以保持专注。</p>]]></content>
      
      
      <categories>
          
          <category> 1-1 CS/语言：Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>《挪威的森林》</title>
      <link href="/2024/07/01/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B/"/>
      <url>/2024/07/01/%E3%80%8A%E6%8C%AA%E5%A8%81%E7%9A%84%E6%A3%AE%E6%9E%97%E3%80%8B/</url>
      
        <content type="html"><![CDATA[<p>2024年7月1日完读</p>]]></content>
      
      
      <categories>
          
          <category> 3 兴趣/阅读 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Intro for Head First Java</title>
      <link href="/2024/07/01/Intro-for-Head-First-Java/"/>
      <url>/2024/07/01/Intro-for-Head-First-Java/</url>
      
        <content type="html"><![CDATA[<h2 id="1-写在前面"><a href="#1-写在前面" class="headerlink" title="1 写在前面"></a>1 写在前面</h2><p>这严格意义上不是我第一次学Java。从大一下面对着一张我几乎看不懂什么的卷子胡写，到大三寒假（？）过了半遍廖雪峰的网站后去磕磕绊绊写Leetcode，每一次Java学习都充满迷惑跟痛苦。</p><p>希望这次我会觉得它是很有趣的东西。</p><h2 id="2-Syllabus"><a href="#2-Syllabus" class="headerlink" title="2 Syllabus"></a>2 Syllabus</h2><table><thead><tr><th>Topic</th><th>Chapter</th><th>Notes</th></tr></thead><tbody><tr><td>程序结构、循环、条件</td><td>01 浮出水面：Java初探</td><td></td></tr><tr><td>OOP</td><td>02 对象城之旅：类和对象</td><td></td></tr><tr><td></td><td>03 了解你的变量：基本类型和引用</td><td></td></tr><tr><td></td><td>04 对象的行为：方法使用 实例变量</td><td></td></tr><tr><td>实践OOP</td><td>05 强有力的方法：写程序</td><td></td></tr><tr><td></td><td>06 使用Java库：认识Java API</td><td></td></tr><tr><td></td><td>07 对象城的美丽生活：继承和多态</td><td></td></tr><tr><td></td><td>08 真正的多态：接口和抽象类</td><td></td></tr><tr><td></td><td>09 对象的生与死：构造器和垃圾回收（gc）</td><td></td></tr><tr><td>数学 &amp; 字符串格式化</td><td>10 数字很重要：数字和静态</td><td>静态是静态方法？</td></tr><tr><td>Java集合框架</td><td>11 数据结构：集合与泛型</td><td></td></tr><tr><td>Streams API</td><td>12 做什么而不是怎么做：Lambda与流</td><td>完全陌生主题</td></tr><tr><td></td><td>13 有风险的行为：异常处理</td><td></td></tr><tr><td>事件处理和内部类</td><td>14 图形的故事：获得GUI</td><td></td></tr><tr><td></td><td>15 使用Swing：使用swing</td><td>这是什么？</td></tr><tr><td></td><td>16 保存对象（和文本）：串行化和文件I&#x2F;O</td><td></td></tr><tr><td>客户端和服务器通道</td><td>17 建立连接：网络和线程</td><td></td></tr><tr><td></td><td>18 处理并发问题：竞态条件和不可变数据</td><td></td></tr><tr><td>附录B</td><td>这本书没有谈到的十大主题</td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 1-1 CS/语言：Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HW0 &amp; HFJ 详细目录、引言</title>
      <link href="/2024/07/01/HW0-HFJ-%E8%AF%A6%E7%BB%86%E7%9B%AE%E5%BD%95%E3%80%81%E5%BC%95%E8%A8%80/"/>
      <url>/2024/07/01/HW0-HFJ-%E8%AF%A6%E7%BB%86%E7%9B%AE%E5%BD%95%E3%80%81%E5%BC%95%E8%A8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="HW0"><a href="#HW0" class="headerlink" title="HW0"></a>HW0</h2><ul><li><a href="https://sp21.datastructur.es/materials/hw/hw0/hw0">HW 0: A Java Crash Course | CS 61B Spring 2021 (datastructur.es)</a></li></ul><p>看了一眼HW0里的内容就开始生气😡</p><p>想到之前不愉快的Java学习经历，还是腾出时间看HFJ好，就这么决定了。</p><h2 id="Head-first-Java-引言"><a href="#Head-first-Java-引言" class="headerlink" title="Head first Java 引言"></a>Head first Java 引言</h2><p>贴到我的电子冰箱（指这篇博文）上。</p><p>其它未出现在本页而我认为比较重要的内容：</p><ul><li>顺序阅读</li><li>章末练习必做</li></ul><img src="IMG_0203.JPG" alt="IMG_0203" style="zoom:20%;" /><p>最后，作者还解释了使用“超长致谢”的原因，很有趣。</p>]]></content>
      
      
      <categories>
          
          <category> 1-2 CS/基础：CS61B </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>要未雨绸缪，也要以退为进</title>
      <link href="/2024/07/01/%E4%BB%A5%E9%80%80%E4%B8%BA%E8%BF%9B/"/>
      <url>/2024/07/01/%E4%BB%A5%E9%80%80%E4%B8%BA%E8%BF%9B/</url>
      
        <content type="html"><![CDATA[<p><img src="/2024/07/01/%E4%BB%A5%E9%80%80%E4%B8%BA%E8%BF%9B/IMG_0209.JPG" alt="IMG_0209"></p>]]></content>
      
      
      <categories>
          
          <category> 0-1 收纳箱 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Plan for summer 2024</title>
      <link href="/2024/07/01/Plan-for-summer-2024/"/>
      <url>/2024/07/01/Plan-for-summer-2024/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>又结束了一个学期，在提心吊胆等最后几门课的成绩的同时，享受着一点阶段之间的过渡时期带来的闲暇。感谢自己在注销公众号前把之前的稿件全部都搬运进了notion，使现在还有机会回顾大三开头时的心情。</p><blockquote><p>本来没有想写些公开发表的东西，那些想到过的感觉有必要被记录的，都存进了日记。</p><p>前天刚结束缓考，在一天半的“休息”后准备重振旗鼓。想想自己从今年年初到如今度过不多不少的three quarters，这一路真是无聊又痛苦。</p><p>早先已经认定自己并不适合国内的升学制度，也不愿承担在没有经济基础的情况下投身热爱的风险，我面前只剩下两条路：忍受或者冒险。过去也曾有类似的选择。</p><p>22年11月是一个可怕的月份，我学不明白课业，虽然每天都过的疲惫而单调，脑内知识却从不见长。我总是在悲剧中乐观的猜测——我一定能学会的，只是时间问题。但国内的许多机会是不等人的。我感觉生活在一个传送带上，每到达一个处理点，却只能摇摇头说，我还没有准备好，随即被淘汰。</p><p>途中也有许多人向我表示过，那为什么你不直接放下一切，去选择自己擅长或者感兴趣的呢？背后的原因不便在这里赘述，简单来说，就是我内心中总有一个最优解，而我同样也相信，上天不会设置无法通过的考验。</p><p>—— 记于2023年9月17日</p></blockquote><p>果然如我所料，在大三上的期末，我在课业上的问题被莫名其妙地解决。而从刚过去的大三下中所收获的则让我对未来充满希望，这与过去任何一个时点上我曾拥有过的心境不同。</p><h2 id="Plan-for-summer-2024"><a href="#Plan-for-summer-2024" class="headerlink" title="Plan for summer 2024"></a>Plan for summer 2024</h2><p>课业上的问题被解决后，继续看向我惨痛的CS学习。从23年9月折腾到24年7月，我喜提了“一事无成”的荣誉称号，也大概算个比较罕见的情况。</p><p>总之，出于并不复杂但非常难说明完全的原因，我从边做项目边学习的学习路径切换到了学CS核心课。这也又是一次我几乎没有参考身边他人的意见，而完全相信自己直觉所做的决定。同样，这一次我也并不清楚自己是否会输的一败涂地，结果只能交由时间去检验。</p><hr><p>在并不仔细地比较阅读一些网站和帖子后，得出了如下的学习路线。</p><p><img src="/2024/07/01/Plan-for-summer-2024/image-20240701183721232.png" alt="image-20240701183721232"></p><p>因为还没有正式开始推进，所以还没有办法做合理的估计。第一个任务是CS61B，用我只恨不爱的Java，希望可以一周学完（小小小小声）。</p>]]></content>
      
      
      <categories>
          
          <category> 0-2 系统/计划 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Intro for CS61B</title>
      <link href="/2024/07/01/Intro-for-CS61B/"/>
      <url>/2024/07/01/Intro-for-CS61B/</url>
      
        <content type="html"><![CDATA[<h2 id="1-资料整理"><a href="#1-资料整理" class="headerlink" title="1 资料整理"></a>1 资料整理</h2><ul><li>CSdiy：<a href="https://csdiy.wiki/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/CS61B/">UCB CS61B: Data Structures and Algorithms - CS自学指南 (csdiy.wiki)</a></li><li>官网（只有 21 Spring 有自动的作业批改）<ul><li><a href="https://sp21.datastructur.es/">Main | CS 61B Spring 2021 (datastructur.es)</a></li></ul></li></ul><hr><ul><li><p>知乎：<a href="https://zhuanlan.zhihu.com/p/434144861">CS 61b - 开始小结cs61B自学学习课程 - 知乎 (zhihu.com)</a></p></li><li><p>中文笔记：<a href="https://blog.csdn.net/fourier_transformer/category_9856976.html">CS61B学习总结_fourier_transformer的博客-CSDN博客</a></p></li><li><p>英文笔记：<a href="https://github.com/simonguozirui/CS61B-Notes">simonguozirui&#x2F;CS61B-Notes: Class notes for CS 61B, Spring 2020 (github.com)</a></p></li><li><p>英文笔记：<a href="https://mschuldt.github.io/cs61b_lecture_notes/">cs61b Lecture Notes (mschuldt.github.io)</a></p></li></ul><hr><ul><li><p>作业：<a href="https://github.com/zjsyhjh/ucb-cs61b?tab=readme-ov-file">zjsyhjh&#x2F;ucb-cs61b: All projects about ucb-61b(2014 spring), http://www.cs.berkeley.edu/~jrs&#x2F;61b&#x2F;index.html (github.com)</a></p></li><li><p>lab 1-8 &amp; project 0-3：<a href="https://github.com/Berkeley-CS61B/skeleton-sp21">Berkeley-CS61B&#x2F;skeleton-sp21: starter code for spring 21 (github.com)</a></p></li><li><p>lab 1-11：<a href="https://github.com/Berkeley-CS61B/lectureCode-sp21">Berkeley-CS61B&#x2F;lectureCode-sp21 (github.com)</a></p></li></ul><hr><ul><li><p>英文复习：<a href="https://notes.bencuan.me/cs61b/">CS 61B: Data Structures | 🗒️ Ben’s Notes (bencuan.me)</a></p></li><li><p>中文复习：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/547610778">UCB CS61B 学习笔记(1-8) - 知乎 (zhihu.com)</a></li><li><a href="https://zhuanlan.zhihu.com/p/551577260">UCB CS61B 学习笔记(Ch9-17) - 知乎 (zhihu.com)</a></li></ul></li></ul><h2 id="2-初步计划"><a href="#2-初步计划" class="headerlink" title="2 初步计划"></a>2 初步计划</h2><h3 id="1-学习方法"><a href="#1-学习方法" class="headerlink" title="1 学习方法"></a>1 学习方法</h3><p>有参考「正常学习过程」部分：<a href="https://zhuanlan.zhihu.com/p/434144861">CS 61b - 开始小结cs61B自学学习课程 - 知乎 (zhihu.com)</a></p><ol><li>找到自己待学习的 “部分”</li><li>先读Reading</li><li>再看Lecture<ol><li>slides</li><li>video</li><li>guide</li></ol></li><li>Discussion</li><li>Lab</li><li>Assignments &#x2F; Exams</li></ol><h3 id="2-课程大纲"><a href="#2-课程大纲" class="headerlink" title="2 课程大纲"></a>2 课程大纲</h3><table><thead><tr><th>Topic</th><th>Lecture</th><th>Notes</th></tr></thead><tbody><tr><td>Java</td><td>1 Intro, Hello World Java</td><td>在此之前还有HW0</td></tr><tr><td></td><td>2 Defining and Using Classes</td><td></td></tr><tr><td></td><td>3 Testing</td><td></td></tr><tr><td></td><td>4 References, Recursion, and Lists</td><td></td></tr><tr><td>DS（Lists）</td><td>5 SLLists, Nested Classes, Sentinel Nodes</td><td></td></tr><tr><td></td><td>6 DLLists, Arrays</td><td></td></tr><tr><td></td><td>7 ALists, Resizing, vs. SLists</td><td></td></tr><tr><td>Java</td><td>8 Inheritance, Implements</td><td></td></tr><tr><td></td><td>9 Extends, Casting, Higher Order Functions</td><td></td></tr><tr><td></td><td>10 Subtype Polymorphism vs. HoFs</td><td></td></tr><tr><td></td><td>11 Exceptions, Iterators, Object Methods</td><td></td></tr><tr><td>Tools</td><td>12 Command Line Programming, Git, Project 2 Preview</td><td></td></tr><tr><td>A</td><td>13 Asymptotics I</td><td></td></tr><tr><td></td><td>14 Disjoint Sets</td><td></td></tr><tr><td></td><td>15 Asymptotics II</td><td></td></tr><tr><td>DS（Trees）</td><td>16 ADTs, Sets, Maps, BSTs</td><td></td></tr><tr><td></td><td>17 B-Trees (2-3, 2-3-4 Trees)</td><td></td></tr><tr><td></td><td>18 Red Black Trees</td><td></td></tr><tr><td></td><td>19 Hashing</td><td></td></tr><tr><td></td><td>20 Heaps and PQs</td><td></td></tr><tr><td></td><td>21 Tree and Graph Traversals</td><td></td></tr><tr><td>DS（Graph）</td><td>22 Graph Traversals and Implementations</td><td></td></tr><tr><td>A</td><td>23 Shortest Paths</td><td></td></tr><tr><td>DS</td><td>24 Minimum Spanning Trees</td><td></td></tr><tr><td>pink</td><td>25 Range Searching and Multi-Dimensional Data</td><td></td></tr><tr><td>O &amp; DS</td><td>26 Prefix Operations and Tries</td><td></td></tr><tr><td>pink</td><td>27 Software Engineering I</td><td></td></tr><tr><td>pink</td><td>28 Reductions and Decomposition</td><td></td></tr><tr><td>A（Sorts）</td><td>29 Basic Sorts</td><td></td></tr><tr><td></td><td>30 Quick Sort</td><td></td></tr><tr><td>pink</td><td>31 Software Engineering II</td><td></td></tr><tr><td>A</td><td>32 More Quick Sort, Sorting Summary</td><td></td></tr><tr><td>pink</td><td>33 Software Engineering III</td><td></td></tr><tr><td>A（Sorts）</td><td>34 Sorting and Algorithmic Bounds</td><td></td></tr><tr><td></td><td>35 Radix Sorts</td><td></td></tr><tr><td></td><td>36 Sorting and Data Structures Conclusion</td><td></td></tr><tr><td>pink</td><td>37 Software Engineering IV</td><td></td></tr><tr><td>pink</td><td>38 Compression</td><td></td></tr><tr><td>pink</td><td>39 Compression, Complexity, and P&#x3D;NP?</td><td></td></tr><tr><td>pink</td><td>40 Summary, Fun</td><td></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 1-2 CS/基础：CS61B </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>使用 Hexo &amp; GitHub page 搭建个人网站</title>
      <link href="/2024/06/28/%E4%BD%BF%E7%94%A8Hexo-GitHub-page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/"/>
      <url>/2024/06/28/%E4%BD%BF%E7%94%A8Hexo-GitHub-page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<p>记得一年半以前，朋友在搭建完他的个人博客后说，第一篇文章才不要写「如何搭建个人博客」时，我想这想法还蛮有趣的。</p><p>而我欣然做个无趣的人。</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h2><ul><li><a href="https://hexo.io/zh-cn/docs/">文档 | Hexo</a></li></ul><p>按照官方文档指示安装即可</p><ol><li>Node.js</li><li>Git</li><li>Hexo</li></ol><h2 id="2-建站"><a href="#2-建站" class="headerlink" title="2 建站"></a>2 建站</h2><ul><li><a href="https://hexo.io/zh-cn/docs/setup">建站 | Hexo</a></li></ul><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo init <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token builtin class-name">cd</span> <span class="token operator">&lt;</span>folder<span class="token operator">></span>$ <span class="token function">npm</span> <span class="token function">install</span></code></pre><p>然后简单了解文件夹目录，注意 public 文件夹是后期自动生成的。暂时不知道是否需要手动调整。</p><h2 id="3-配置-更换主题"><a href="#3-配置-更换主题" class="headerlink" title="3 配置-更换主题"></a>3 配置-更换主题</h2><ul><li><a href="https://adisaktijrs.github.io/2020/10/11/Hexo-Minima-Theme-v1-0-Officially-Released/#Documentation">Hexo Theme: Minima v1.0 is Officially Released (adisaktijrs.github.io)</a></li></ul><p>照搬 Theme Configuration 前部分</p><h2 id="4-创建存放-GitHub-page-的仓库"><a href="#4-创建存放-GitHub-page-的仓库" class="headerlink" title="4 创建存放 GitHub page 的仓库"></a>4 创建存放 GitHub page 的仓库</h2><ul><li><a href="https://docs.github.com/zh/pages/getting-started-with-github-pages/creating-a-github-pages-site">创建 GitHub Pages 站点 - GitHub 文档</a></li></ul><p>存储库命名为：<code>&lt;user&gt;.github.io</code></p><h2 id="5-部署到-GitHub-page"><a href="#5-部署到-GitHub-page" class="headerlink" title="5 部署到 GitHub page"></a>5 部署到 GitHub page</h2><ul><li><a href="https://hexo.io/zh-cn/docs/one-command-deployment#Git">部署 | Hexo</a></li></ul><p>因为这是第二次试图部署（悲）可以在被报错信息攻击前提前绕过错误。</p><ul><li><a href="https://github.com/hexojs/hexo/issues/4757">Can’t deploy to github even though I have personal token in the _config.yml · Issue #4757 · hexojs&#x2F;hexo</a></li></ul><p>如果是初次设置SSH密钥，请直接询问gpt：如何在github上设置ssh key</p><blockquote><p>一个未解决的问题是不会用git，不知道怎么分离写作分支和部署分支，配置文件里暂时设置的是main。</p></blockquote><blockquote><p>另一个问题是，不知道是否必需公开 GitHub 仓库才能使用page？不清楚原理，有很多问题</p></blockquote><h2 id="6-修改Theme配置内容"><a href="#6-修改Theme配置内容" class="headerlink" title="6 修改Theme配置内容"></a>6 修改Theme配置内容</h2><p>给自己的初版留个纪念</p><p><img src="/2024/06/28/%E4%BD%BF%E7%94%A8Hexo-GitHub-page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20240628105646472.png" alt="image-20240628105646472"></p><h2 id="7-图片解析"><a href="#7-图片解析" class="headerlink" title="7 图片解析"></a>7 图片解析</h2><ul><li><a href="https://hexo.io/zh-cn/docs/asset-folders#%E4%BD%BF%E7%94%A8-Markdown-%E5%B5%8C%E5%85%A5%E5%9B%BE%E7%89%87">资源文件夹 | Hexo</a></li></ul><p>这里其实还是个蛮头疼的地方，想要网站里图片正常显示，在 Typora 的编辑器里，就看不到图片了……暂时还没有解决这个问题。</p><p><img src="/2024/06/28/%E4%BD%BF%E7%94%A8Hexo-GitHub-page%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E7%BD%91%E7%AB%99/image-20240628111615694.png" alt="image-20240628111615694"></p><p>而在图片显示的部分，还有一个小插曲。我在第二次创建项目的时候，头昏脑胀地改了permalink的内容（也可能是我以为我改了，总之最后删成了只剩 <code>:title/</code> ）</p><p>此时开启 <code>_config.yml</code> 文件中的选项，自然无法起效。</p><h2 id="8-代码高亮"><a href="#8-代码高亮" class="headerlink" title="8 代码高亮"></a>8 代码高亮</h2><ul><li><a href="https://hexo.io/zh-cn/docs/syntax-highlight#PrismJS">代码高亮 | Hexo</a></li></ul><p>主题里的教程是过时的。</p><hr><p>基础配置的部分到此暂结，之后在另一篇文章里补充一点跟博文写作相关的内容。</p>]]></content>
      
      
      <categories>
          
          <category> 1-4 CS/其它 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>写在前面</title>
      <link href="/2024/06/27/Intro/"/>
      <url>/2024/06/27/Intro/</url>
      
        <content type="html"><![CDATA[<p>结束大三下的最后一门考试后，实在不想即刻又投入到下一阶段的学习里，就把这个“个人博客”弄了出来，其实应该就只是个用来倒学习垃圾的地方。</p><p>从开始折腾到把网站成功上线用了3h，但这件事本身躺在我的任务列表里已经有一年半了。</p><img src="image-20240627200938924.png" alt="image-20240627200938924" style="zoom:50%;" /><p>最后倒也没有用上这个主题（笑）</p><p>印象里一年半以前想要弄一个个人博客时，愿望还很宏大，而这次仅仅是因为某一天在wsl的网络出现问题的时候，只花了不到10分钟就配好了终端代理，结束时恍惚地想到，在年初我还因为相同的问题重装了一次电脑……（那时候甚至没意识到不同的shell之间语法有区别）</p><p>现在想想当时真是蠢的不可思议。而没有被我记住的愚蠢时刻，应该还有很多吧。</p><p>抱着这样的想法，我翻到了notion里的这一条记录，想起了当时不知道出于什么原因选择了Hexo做框架，去官网找到了过时已久，满是错误的doc 😅，完结了这个拖延已久的任务。</p>]]></content>
      
      
      <categories>
          
          <category> 杂记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
